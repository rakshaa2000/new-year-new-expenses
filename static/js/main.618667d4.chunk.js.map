{"version":3,"sources":["images/undraw_Payments_re_77x0.svg","images/undraw_transfer_money_rywa.svg","firebase.js","services/tutorial.service.js","components/add-tutorial.component.jsx","components/tutorial.component.jsx","components/tutorials-list.component.jsx","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","ref","tutorial","push","key","value","child","update","remove","AddTutorial","props","onChangeTitle","bind","onChangeDescription","onChangeCategory","onChangeDate","onChangeAmt","saveTutorial","newTutorial","state","title","description","published","category","date","amt","submitted","e","this","setState","target","data","TutorialDataService","create","then","console","log","catch","className","onClick","htmlFor","type","id","defaultValue","placeholder","required","onChange","name","InputLabel","TextField","label","InputLabelProps","shrink","Component","Tutorial","updatePublished","updateTutorial","deleteTutorial","currentTutorial","message","prevState","status","delete","refreshList","nextProps","TutorialsList","setActiveTutorial","removeAllTutorials","onDataChange","tutorials","currentIndex","getAll","on","off","items","forEach","item","val","index","deleteAll","map","App","href","to","style","display","justifyContent","src","logo1","width","height","transform","logo","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.618667d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/undraw_Payments_re_77x0.2a8e6932.svg\";","export default __webpack_public_path__ + \"static/media/undraw_transfer_money_rywa.d414000c.svg\";","import firebase from \"firebase\";\r\nimport \"firebase/database\";\r\n\r\nlet config = {\r\n    apiKey: \"AIzaSyB6ANY9wGZWECfoS0-zt8SjCX-FjmNdw-8\",\r\n    authDomain: \"first-project-7a6c8.firebaseapp.com\",\r\n    databaseURL: \"https://first-project-7a6c8.firebaseio.com\",\r\n    projectId: \"first-project-7a6c8\",\r\n    storageBucket: \"first-project-7a6c8.appspot.com\",\r\n    messagingSenderId: \"540736207894\",\r\n    appId: \"1:540736207894:web:d86dc689ed053270c28937\",\r\n    measurementId: \"G-QDPZ6S6SHV\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase.database();","import firebase from \"../firebase\";\r\n\r\nconst db = firebase.ref(\"/tutorials\");\r\n\r\nclass TutorialDataService {\r\n  getAll() {\r\n    return db;\r\n  }\r\n\r\n  create(tutorial) {\r\n    return db.push(tutorial);\r\n  }\r\n\r\n  update(key, value) {\r\n    return db.child(key).update(value);\r\n  }\r\n\r\n  delete(key) {\r\n    return db.child(key).remove();\r\n  }\r\n\r\n  deleteAll() {\r\n    return db.remove();\r\n  }\r\n}\r\n\r\nexport default new TutorialDataService();","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { InputLabel } from \"@material-ui/core\";\r\n\r\n\r\nexport default class AddTutorial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeCategory = this.onChangeCategory.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.onChangeAmt = this.onChangeAmt.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n\r\n    this.state = {\r\n        title: \"\",\r\n        description: \"\",\r\n        published: false,\r\n        category: \"\",\r\n        date:\"\",\r\n        amt:\"0\",\r\n        submitted: false,\r\n    };\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      title: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeCategory(e) {\r\n    this.setState({\r\n      category: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeAmt(e) {\r\n    this.setState({\r\n      amt: e.target.value,\r\n    });\r\n  }\r\n\r\n\r\n  onChangeDate(e) {\r\n    this.setState({\r\n      date: e.target.value,\r\n    });\r\n  }\r\n  saveTutorial() {\r\n    let data = {\r\n      title: this.state.title,\r\n      description: this.state.description,\r\n      category: this.state.category,\r\n      date:this.state.date,\r\n      amt:this.state.amt,\r\n      published: false\r\n    };\r\n\r\n    TutorialDataService.create(data)\r\n      .then(() => {\r\n        console.log(\"Created new item successfully!\");\r\n        this.setState({\r\n          submitted: true,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      title: \"\",\r\n      description: \"\",\r\n      published: false,\r\n      category: \"\",\r\n      date:\"\",\r\n      amt:\"0\",\r\n      submitted: false,\r\n    });\r\n  }\r\n\r\n  render() { \r\n    return (\r\n        <div className=\"submit-form\">\r\n          {this.state.submitted ? (\r\n            <div>\r\n              <h4>You submitted successfully!</h4>\r\n              <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n                Add\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  defaultValue=\"Exp Name\"\r\n                  placeholder=\"Exp Name\"\r\n                  required\r\n                  value={this.state.title}\r\n                  onChange={this.onChangeTitle}\r\n                  name=\"title\"\r\n                />\r\n              </div>\r\n  \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  defaultValue=\"General expenses\"\r\n                  placeholder=\"General expenses\"\r\n                  required\r\n                  value={this.state.description}\r\n                  onChange={this.onChangeDescription}\r\n                  name=\"description\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"amt\">Amount</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"amt\"\r\n                  defaultValue=\"0\"\r\n                  placeholder=\"0\"\r\n                  required\r\n                  value={this.state.onChangeAmt}\r\n                  onChange={this.onChangeAmt}\r\n                  name=\"description\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <InputLabel htmlFor=\"category\">Category</InputLabel>\r\n                <select name=\"category\" id=\"category\" className=\"form-control\" required\r\n                  value={this.state.category}\r\n                  onChange={this.onChangeCategory}>\r\n                    <option value=\"General\">General</option>\r\n                    <option value=\"Groceries\">Groceries</option>\r\n                    <option value=\"Academic\">Academic</option>\r\n                    <option value=\"Transportation\">Transportation</option>\r\n                    <option value=\"Medical\">Medical</option>\r\n                    <option value=\"Clothing\">Clothing</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <TextField\r\n                    id=\"date\"\r\n                    label=\"Date of Expense\"\r\n                    type=\"date\"\r\n                    value={this.state.date}\r\n                    onChange={this.onChangeDate}\r\n                    defaultValue=\"2017-05-24\"\r\n                    className=\"form-control\"\r\n                    InputLabelProps={{\r\n                    shrink: true,\r\n                    }}\r\n                />\r\n              </div>\r\n\r\n              <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n   }\r\n}","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\n\r\nexport default class Tutorial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeCategory = this.onChangeCategory.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.onChangeAmt = this.onChangeAmt.bind(this);\r\n    this.updatePublished = this.updatePublished.bind(this);\r\n    this.updateTutorial = this.updateTutorial.bind(this);\r\n    this.deleteTutorial = this.deleteTutorial.bind(this);\r\n\r\n    this.state = {\r\n      currentTutorial: {\r\n        key: null,\r\n        title: \"\",\r\n        description: \"\",\r\n        category:\"\",\r\n        date:\"\",\r\n        amt:\"0\",\r\n        published: false,\r\n      },\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const { tutorial } = nextProps;\r\n    if (prevState.currentTutorial.key !== tutorial.key) {\r\n      return {\r\n        currentTutorial: tutorial,\r\n        message: \"\"\r\n      };\r\n    }\r\n\r\n    return prevState.currentTutorial;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      currentTutorial: this.props.tutorial,\r\n    });\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    const title = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentTutorial: {\r\n          ...prevState.currentTutorial,\r\n          title: title,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    const description = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentTutorial: {\r\n        ...prevState.currentTutorial,\r\n        description: description,\r\n      },\r\n    }));\r\n  }\r\n  \r\n\r\n  onChangeDate(e) {\r\n    const date = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentTutorial: {\r\n        ...prevState.currentTutorial,\r\n        date: date,\r\n      },\r\n    }));\r\n  }\r\n  onChangeAmt(e) {\r\n    const amt = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentTutorial: {\r\n        ...prevState.currentTutorial,\r\n        amt: amt,\r\n      },\r\n    }));\r\n  }\r\n\r\n  onChangeCategory(e) {\r\n    const category = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentTutorial: {\r\n        ...prevState.currentTutorial,\r\n        category: category,\r\n      },\r\n    }));\r\n  }\r\n\r\n  updatePublished(status) {\r\n    TutorialDataService.update(this.state.currentTutorial.key, {\r\n      published: status,\r\n    })\r\n      .then(() => {\r\n        this.setState((prevState) => ({\r\n          currentTutorial: {\r\n            ...prevState.currentTutorial,\r\n            published: status,\r\n          },\r\n          message: \"The status was updated successfully!\",\r\n        }));\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateTutorial() {\r\n    const data = {\r\n      title: this.state.currentTutorial.title,\r\n      description: this.state.currentTutorial.description,\r\n      category: this.state.category,\r\n      date: this.state.date,\r\n    };\r\n\r\n    TutorialDataService.update(this.state.currentTutorial.key, data)\r\n      .then(() => {\r\n        this.setState({\r\n          message: \"The tutorial was updated successfully!\",\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteTutorial() {\r\n    TutorialDataService.delete(this.state.currentTutorial.key)\r\n      .then(() => {\r\n        this.props.refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() { const { currentTutorial } = this.state;\r\n\r\n  return (\r\n    <div>\r\n      <h4>Transaction</h4>\r\n      {currentTutorial ? (\r\n        <div className=\"edit-form\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"title\"\r\n                value={currentTutorial.title}\r\n                onChange={this.onChangeTitle}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                value={currentTutorial.description}\r\n                onChange={this.onChangeDescription}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"amt\">Amount</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"amt\"\r\n                value={currentTutorial.amt}\r\n                onChange={this.onChangeAmt}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"category\">Category</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"category\"\r\n                value={currentTutorial.category}\r\n                onChange={this.onChangeCategory}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>\r\n                <strong>Status: </strong>\r\n              </label>\r\n              {currentTutorial.published ? \" Published\" : \" Pending\"}\r\n            </div>\r\n          </form>\r\n\r\n          {currentTutorial.published ? (\r\n            <button\r\n              className=\"badge badge-primary mr-2\"\r\n              onClick={() => this.updatePublished(false)}\r\n            >\r\n              UnPublish\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"badge badge-primary mr-2\"\r\n              onClick={() => this.updatePublished(true)}\r\n            >\r\n              Publish\r\n            </button>\r\n          )}\r\n\r\n          <button\r\n            className=\"badge badge-danger mr-2\"\r\n            onClick={this.deleteTutorial}\r\n          >\r\n            Delete\r\n          </button>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"badge badge-success\"\r\n            onClick={this.updateTutorial}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{this.state.message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Transaction...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n }\r\n}","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\n\r\nimport Tutorial from \"./tutorial.component\";\r\n\r\nexport default class TutorialsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\r\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\r\n    this.onDataChange = this.onDataChange.bind(this);\r\n\r\n    this.state = {\r\n      tutorials: [],\r\n      currentTutorial: null,\r\n      currentIndex: -1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    TutorialDataService.getAll().on(\"value\", this.onDataChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    TutorialDataService.getAll().off(\"value\", this.onDataChange);\r\n  }\r\n\r\n  onDataChange(items) {\r\n    let tutorials = [];\r\n\r\n    items.forEach((item) => {\r\n      let key = item.key;\r\n      let data = item.val();\r\n      tutorials.push({\r\n        key: key,\r\n        title: data.title,\r\n        description: data.description,\r\n        category: data.category,\r\n        amt:data.amt,\r\n        published: data.published,\r\n      });\r\n    });\r\n\r\n    this.setState({\r\n      tutorials: tutorials,\r\n    });\r\n  }\r\n\r\n  refreshList() {\r\n    this.setState({\r\n      currentTutorial: null,\r\n      currentIndex: -1,\r\n    });\r\n  }\r\n\r\n  setActiveTutorial(tutorial, index) {\r\n    this.setState({\r\n      currentTutorial: tutorial,\r\n      currentIndex: index,\r\n    });\r\n  }\r\n\r\n  removeAllTutorials() {\r\n    TutorialDataService.deleteAll()\r\n      .then(() => {\r\n        this.refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() { const { tutorials, currentTutorial, currentIndex } = this.state;\r\n\r\n  return (\r\n    <div className=\"list row\">\r\n      <div className=\"col-md-6\">\r\n        <h4>Transactions</h4>\r\n\r\n        <ul className=\"list-group\">\r\n          {tutorials &&\r\n            tutorials.map((tutorial, index) => (\r\n              <li\r\n                className={\r\n                  \"list-group-item \" +\r\n                  (index === currentIndex ? \"active\" : \"\")\r\n                }\r\n                onClick={() => this.setActiveTutorial(tutorial, index)}\r\n                key={index}\r\n              >\r\n                {tutorial.title}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n\r\n        <button\r\n          className=\"m-3 btn btn-sm btn-danger\"\r\n          onClick={this.removeAllTutorials}\r\n        >\r\n          Remove All\r\n        </button>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        {currentTutorial ? (\r\n          <Tutorial\r\n            tutorial={currentTutorial}\r\n            refreshList={this.refreshList}\r\n          />\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Transaction...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n }\r\n}","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport logo from \"./images/undraw_Payments_re_77x0.svg\";\r\nimport logo1 from './images/undraw_transfer_money_rywa.svg'\r\n\r\nimport AddTutorial from \"./components/add-tutorial.component\";\r\nimport TutorialsList from \"./components/tutorials-list.component\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <a href=\"/tutorials\" className=\"navbar-brand\">\r\n            NYNE\r\n          </a>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/tutorials\"} className=\"nav-link\">\r\n                Transactions\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/add\"} className=\"nav-link\">\r\n                Add Expense\r\n              </Link>\r\n            </li>\r\n          </div>\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <div style={{display:\"inline-flex\", justifyContent:\"space-around\"}}>\r\n          <img src={logo1} width=\"200px\" height=\"200px\" style={{transform:\"translateX(20%) translateY(-15%)\"}}/>\r\n          <hr></hr>\r\n          <h2>Family Expenses Application</h2>\r\n          <hr></hr>\r\n          <img src={logo} width=\"200px\" height=\"200px\" style={{transform:\"translateX(20%) translateY(-15%)\"}}/>\r\n          </div>\r\n          <Switch>\r\n            <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\r\n            <Route exact path=\"/add\" component={AddTutorial} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}